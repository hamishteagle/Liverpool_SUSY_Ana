variables:
  GIT_SSL_NO_VERIFY: "true"

stages:
  - build
  - run

# Build Docker image
# To see the available commands when building a docker image with Gitlab, see
# https://gitlab.cern.ch/vcs/gitlabci-docker-builder

build_image:
  stage: build
  tags:
    - docker-image-build
  script: "echo 'Building image ...'"
  variables:
    TO: ${CI_REGISTRY_IMAGE}:$CI_COMMIT_REF_SLUG

#################### analysisbase image ###############
.analysis_image: &image
  image : atlas/analysisbase:21.2.112
  tags:
    - cvmfs
  before_script:
    - pwd
    - ls
    - source /home/atlas/release_setup.sh


.variables_files: &variables_files #these variables are used to copy a file from EOS to the CI
  variables:
    METHOD: rsync #use rsync if you want to copy stuff FROM EOS
    EOS_GET_OR_DEPLOY: GET #get the file from EOS, not push it there
    SAMPLE: mc16_13TeV.410470.PhPy8EG_A14_ttbar_hdamp258p75_nonallhad.deriv.DAOD_SUSY5.e6337_s3126_r9364_p3990/
    EOS_PATH: /eos/user/l/livana/Public/$SAMPLE #path on EOS to copy from
    CI_BASE_DIR: fromEOS
    CI_OUTPUT_DIR: $CI_BASE_DIR/$SAMPLE #path at CI level to copy to

# # Run CI tests in the docker image
run_project:
  artifacts:
    name: "weights_plots"
    expire_in: "1 month"
    paths:
    - "/builds/hteagle/Liverpool_SbottomAnalysis_Rel21/WorkDir/Macros/Tests/default/*.pdf"
  tags:
    - cvmfs
  stage: run
  <<: *variables_files
  <<: *image
  script:
    #Get file from EOS
    - mkdir fromEOS #directory to download the files to
    - mkdir fromEOS/mc16_13TeV.410470.PhPy8EG_A14_ttbar_hdamp258p75_nonallhad.deriv.DAOD_SUSY5.e6337_s3126_r9364_p3990/ #directory to download the files to
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.cern.ch/hteagle/livana-ci-web-deployer.git #this package allows us to copy stuff from EOS
    - sudo cp livana-ci-web-deployer/bin/* /sbin/ #"install" the binaries
    - deploy-eos #actually copy the files from EOS (part of upper repository)
    - ls fromEOS/mc16_13TeV.410470.PhPy8EG_A14_ttbar_hdamp258p75_nonallhad.deriv.DAOD_SUSY5.e6337_s3126_r9364_p3990/ #make sure the files are there
    #Run tests
    - pwd
    - mkdir -p run #this is happening inside the Gitlab runner
    - mkdir -p /home/atlas/submitdir/ #this is happening inside the Gitlab runner
    - mkdir -p build
    - cd build; cmake ../WorkDir; make;
    - source *-opt/setup.sh
    - cd ../run
    - testRun ../$CI_OUTPUT_DIR /home/atlas/submitdir/ 0 0 1 -1 hteagle 21.2.100  TYPE 0 5 0 1 ##This is what newsubmit.py does by default, sort this out at some point.
    - cd ../WorkDir
    - ls -l /home/atlas/submitdir/
    - python Macros/Tests/full_test.py -s /home/atlas/submitdir/data-output/
